/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.serviceSeeker;

import business.common.Validation;
import business.person.ServiceSeeker;
import business.person.Person;
import business.vsTrackingDevice.VitalSign;
import business.userAccount.UserAccount;
import business.userAccount.UserAccountDirectory;
import java.awt.BorderLayout;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author prasanna
 */
public class ViewVitalSignHistoryJPanel extends javax.swing.JPanel {
    
    private JPanel userProcessContainer;
    private UserAccount userAccount; 
    private Person person;
    private UserAccountDirectory userAccountDirectory;
    
    /**
     * Creates new form ViewVitalSignHistoryJPanel
     */
    public ViewVitalSignHistoryJPanel(JPanel userProcessContainer, UserAccount userAccount, UserAccountDirectory userAccountDirectory) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        person = userAccount.getPerson();
        this.userAccountDirectory = userAccountDirectory;
        
        populateVitalSignsJTable();
    }
    
    
     public void populateVitalSignsJTable()
    {   
        try
        {
        ServiceSeeker customer = (ServiceSeeker)person;
        if(customer.getVitalSignList().isEmpty())
        {
        JOptionPane.showMessageDialog(this, "Please update vital sign information first", "warning", JOptionPane.WARNING_MESSAGE);
        return;    
        }
        DefaultTableModel defaultTableModel = (DefaultTableModel)vitalSignTable.getModel();
        defaultTableModel.setRowCount(0);
        int age = Validation.ageCalculator(person.getDateOfBirth());
        
        for(VitalSign vitalSign : customer.getVitalSignList())
        {
        String patientCondition = customer.patientCondition(age, vitalSign);
        Object [] rowData = new Object[2];
        rowData[0] = vitalSign;
        rowData[1] = patientCondition;
       
        defaultTableModel.addRow(rowData);
        }
        }
        catch(NullPointerException npe)
        {
            JOptionPane.showMessageDialog(this, "No records for the person", "error", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        vitalSignTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        respiratoryRate = new javax.swing.JLabel();
        respiratoryRateTextField = new javax.swing.JTextField();
        heartRate = new javax.swing.JLabel();
        heartRateTextField = new javax.swing.JTextField();
        systollicBloodPressure = new javax.swing.JLabel();
        systollicBPTextField = new javax.swing.JTextField();
        weight = new javax.swing.JLabel();
        weightTextField = new javax.swing.JTextField();
        manageEnt2 = new javax.swing.JLabel();
        manageEnt5 = new javax.swing.JLabel();
        barChartPanel = new javax.swing.JPanel();
        viewDetailsJButton = new javax.swing.JButton();
        BarCharJButton = new javax.swing.JButton();
        backJButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(21, 25, 28));

        vitalSignTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date/Time", "Patient Vital Condition"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(vitalSignTable);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(169, 224, 49));
        jLabel3.setText("Vital Signs");

        respiratoryRate.setForeground(new java.awt.Color(169, 224, 49));
        respiratoryRate.setText("Respiratory Rate:");

        respiratoryRateTextField.setEditable(false);
        respiratoryRateTextField.setBackground(new java.awt.Color(21, 25, 28));
        respiratoryRateTextField.setForeground(new java.awt.Color(255, 255, 255));
        respiratoryRateTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(169, 224, 49)));

        heartRate.setForeground(new java.awt.Color(169, 224, 49));
        heartRate.setText("Heart Rate:");

        heartRateTextField.setEditable(false);
        heartRateTextField.setBackground(new java.awt.Color(21, 25, 28));
        heartRateTextField.setForeground(new java.awt.Color(255, 255, 255));
        heartRateTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(169, 224, 49)));

        systollicBloodPressure.setForeground(new java.awt.Color(169, 224, 49));
        systollicBloodPressure.setText("Systollic Blood Pressure:");

        systollicBPTextField.setEditable(false);
        systollicBPTextField.setBackground(new java.awt.Color(21, 25, 28));
        systollicBPTextField.setForeground(new java.awt.Color(255, 255, 255));
        systollicBPTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(169, 224, 49)));

        weight.setForeground(new java.awt.Color(169, 224, 49));
        weight.setText("Weight (Pounds):");

        weightTextField.setEditable(false);
        weightTextField.setBackground(new java.awt.Color(21, 25, 28));
        weightTextField.setForeground(new java.awt.Color(255, 255, 255));
        weightTextField.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(169, 224, 49)));

        manageEnt2.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        manageEnt2.setForeground(new java.awt.Color(169, 224, 49));
        manageEnt2.setText("Senior Safe");

        manageEnt5.setFont(new java.awt.Font("Malayalam MN", 3, 24)); // NOI18N
        manageEnt5.setForeground(new java.awt.Color(169, 224, 49));
        manageEnt5.setText("View Vital Sign History ");

        javax.swing.GroupLayout barChartPanelLayout = new javax.swing.GroupLayout(barChartPanel);
        barChartPanel.setLayout(barChartPanelLayout);
        barChartPanelLayout.setHorizontalGroup(
            barChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 656, Short.MAX_VALUE)
        );
        barChartPanelLayout.setVerticalGroup(
            barChartPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 412, Short.MAX_VALUE)
        );

        viewDetailsJButton.setBackground(new java.awt.Color(152, 201, 45));
        viewDetailsJButton.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        viewDetailsJButton.setForeground(new java.awt.Color(21, 25, 28));
        viewDetailsJButton.setText("Check");
        viewDetailsJButton.setBorder(null);
        viewDetailsJButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        viewDetailsJButton.setFocusPainted(false);
        viewDetailsJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewDetailsJButtonActionPerformed(evt);
            }
        });

        BarCharJButton.setBackground(new java.awt.Color(152, 201, 45));
        BarCharJButton.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        BarCharJButton.setForeground(new java.awt.Color(21, 25, 28));
        BarCharJButton.setText("View Chart");
        BarCharJButton.setBorder(null);
        BarCharJButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        BarCharJButton.setFocusPainted(false);
        BarCharJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BarCharJButtonActionPerformed(evt);
            }
        });

        backJButton.setBackground(new java.awt.Color(152, 201, 45));
        backJButton.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        backJButton.setForeground(new java.awt.Color(21, 25, 28));
        backJButton.setText("<<Back");
        backJButton.setBorder(null);
        backJButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backJButton.setFocusPainted(false);
        backJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(manageEnt5)
                        .addGap(105, 105, 105)
                        .addComponent(manageEnt2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(heartRate)
                                    .addComponent(respiratoryRate)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(systollicBloodPressure, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(weight))
                                    .addComponent(viewDetailsJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BarCharJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(heartRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(systollicBPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(respiratoryRateTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                        .addGap(42, 42, 42)
                        .addComponent(barChartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(37, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(manageEnt2)
                .addGap(18, 18, 18)
                .addComponent(barChartPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addComponent(manageEnt5)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewDetailsJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BarCharJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(respiratoryRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(respiratoryRate))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(heartRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(heartRate))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(systollicBPTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(systollicBloodPressure))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(weightTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(weight))
                .addGap(29, 29, 29)
                .addComponent(backJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void viewDetailsJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewDetailsJButtonActionPerformed
       int selectedRow = vitalSignTable.getSelectedRow();
        if(selectedRow >= 0)
        {
            VitalSign vitalSign = (VitalSign)vitalSignTable.getValueAt(selectedRow, 0);
            respiratoryRateTextField.setText(String.valueOf(vitalSign.getRespiratoryRate()));
            heartRateTextField.setText(String.valueOf(vitalSign.getHeartRate()));
            systollicBPTextField.setText(String.valueOf(vitalSign.getSystolicBloodpressure()));
            weightTextField.setText(String.valueOf(vitalSign.getWeightInPounds()));
            
            
        }
        else
        {
            JOptionPane.showMessageDialog(this, "Please select a row", "warning", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_viewDetailsJButtonActionPerformed

    private void BarCharJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BarCharJButtonActionPerformed
   int selectedRow = vitalSignTable.getSelectedRow();
         barChartPanel.removeAll();
         barChartPanel.revalidate();
        if(selectedRow >= 0)
        {
            VitalSign vitalSign = (VitalSign)vitalSignTable.getValueAt(selectedRow, 0);
            float respiratoryRate = vitalSign.getRespiratoryRate();
            int heartRate = vitalSign.getHeartRate();
            int systollicBP = vitalSign.getSystolicBloodpressure();
            float weight = vitalSign.getWeightInPounds();
            // Code for bar chart
            
            
            DefaultCategoryDataset dataSet = new DefaultCategoryDataset();
            if(respiratoryRate != 0)
            {
            dataSet.setValue(respiratoryRate, "Values", "Respiratory Rate");
            }
            if(heartRate != 0)
            {
            dataSet.setValue(heartRate, "Values", "Heart Rate");
            }
            if(systollicBP != 0)
            {
            dataSet.setValue(systollicBP, "Values", "Systollic Blood Pressure");
            }
            if(weight != 0)
            {
            dataSet.setValue(weight, "Values", "Weight (pounds)");
            }
            JFreeChart barchart = ChartFactory.createBarChart("Test Results on " + vitalSign.getTimeStamp(),"Vital Signs" ,"Values", dataSet,PlotOrientation.VERTICAL, false, true, false);
            barchart.removeLegend();
            barchart.setBackgroundPaint(Color.CYAN);
            barchart.getTitle().setPaint(Color.BLUE);
            CategoryPlot plot = barchart.getCategoryPlot();
            plot.setBackgroundPaint(Color.WHITE);
            
            
            
            ChartPanel chartpanel = new ChartPanel(barchart);
            chartpanel.setDomainZoomable(true);
            
            barChartPanel.setLayout(new BorderLayout());
            barChartPanel.add(chartpanel, BorderLayout.EAST); 
            barChartPanel.repaint();
            barChartPanel.setVisible(true);
        
      }
        else
        {
            JOptionPane.showMessageDialog(this, "Please select a row", "warning", JOptionPane.PLAIN_MESSAGE);
        }
    }//GEN-LAST:event_BarCharJButtonActionPerformed

    private void backJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backJButtonActionPerformed
        // TODO add your handling code here:
        
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout)userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backJButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BarCharJButton;
    private javax.swing.JButton backJButton;
    private javax.swing.JPanel barChartPanel;
    private javax.swing.JLabel heartRate;
    private javax.swing.JTextField heartRateTextField;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel manageEnt2;
    private javax.swing.JLabel manageEnt5;
    private javax.swing.JLabel respiratoryRate;
    private javax.swing.JTextField respiratoryRateTextField;
    private javax.swing.JTextField systollicBPTextField;
    private javax.swing.JLabel systollicBloodPressure;
    private javax.swing.JButton viewDetailsJButton;
    private javax.swing.JTable vitalSignTable;
    private javax.swing.JLabel weight;
    private javax.swing.JTextField weightTextField;
    // End of variables declaration//GEN-END:variables
}
