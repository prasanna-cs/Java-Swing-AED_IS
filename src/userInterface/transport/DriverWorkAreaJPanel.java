/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.transport;

import business.organizations.Organization;
import business.organizations.OrganizationDirectory;
import business.organizations.TransportOrganization;
import business.userAccount.UserAccount;
import business.workQueue.TransportRequest;
import business.workQueue.WorkRequest;
import java.awt.CardLayout;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userInterface.volunteer.ViewVolunteerProfile;

/**
 *
 * @author prasanna
 */
public class DriverWorkAreaJPanel extends javax.swing.JPanel {
   private JPanel userProcessContainer;
   private UserAccount userAccount;  
    private OrganizationDirectory od;
    private TransportOrganization to;
    
    /**
     * Creates new form DriverWorkAreaJPanel
     */
    public DriverWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, OrganizationDirectory od) {
        initComponents();
         this.userProcessContainer = userProcessContainer;
         this.userAccount = userAccount;
         this.od = od;
         this.to = (TransportOrganization)organization;
         
         populatetransportRequestTable();
    }
   
    
     public void populatetransportRequestTable()
    {
        DefaultTableModel model = (DefaultTableModel)transportRequestListTable.getModel();
        DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy"); 
        model.setRowCount(0);
        if(!to.getWorkQueue().getWorkRequestList().isEmpty())
        {
        for(WorkRequest request : to.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getSender().getPerson().getFullName();
            row[2] = dateFormat.format(request.getRequestDate());
            row[3] = request.getStatus();
           
            model.addRow(row);
        }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manageEnt = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        transportRequestListTable = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnProcessHelpRequest = new javax.swing.JButton();
        btnViewVolunteersProfile = new javax.swing.JButton();
        btnAssignMe = new javax.swing.JButton();

        setBackground(new java.awt.Color(32, 36, 42));

        manageEnt.setBackground(new java.awt.Color(32, 36, 42));
        manageEnt.setFont(new java.awt.Font("Verdana", 0, 24)); // NOI18N
        manageEnt.setForeground(new java.awt.Color(152, 201, 45));
        manageEnt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        manageEnt.setText("Transport Requests");

        transportRequestListTable.setBackground(new java.awt.Color(102, 102, 102));
        transportRequestListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Destination Location", "Requestor", "Requested Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(transportRequestListTable);

        btnRefresh.setBackground(new java.awt.Color(152, 201, 45));
        btnRefresh.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(21, 25, 28));
        btnRefresh.setText("refresh");
        btnRefresh.setBorder(null);
        btnRefresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRefresh.setFocusPainted(false);
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnProcessHelpRequest.setBackground(new java.awt.Color(152, 201, 45));
        btnProcessHelpRequest.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        btnProcessHelpRequest.setForeground(new java.awt.Color(21, 25, 28));
        btnProcessHelpRequest.setText("Process");
        btnProcessHelpRequest.setBorder(null);
        btnProcessHelpRequest.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnProcessHelpRequest.setFocusPainted(false);
        btnProcessHelpRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessHelpRequestActionPerformed(evt);
            }
        });

        btnViewVolunteersProfile.setBackground(new java.awt.Color(152, 201, 45));
        btnViewVolunteersProfile.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        btnViewVolunteersProfile.setForeground(new java.awt.Color(21, 25, 28));
        btnViewVolunteersProfile.setText("View volunteers profile");
        btnViewVolunteersProfile.setBorder(null);
        btnViewVolunteersProfile.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnViewVolunteersProfile.setFocusPainted(false);
        btnViewVolunteersProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewVolunteersProfileActionPerformed(evt);
            }
        });

        btnAssignMe.setBackground(new java.awt.Color(152, 201, 45));
        btnAssignMe.setFont(new java.awt.Font("Trebuchet MS", 0, 16)); // NOI18N
        btnAssignMe.setForeground(new java.awt.Color(21, 25, 28));
        btnAssignMe.setText("Assign to me");
        btnAssignMe.setBorder(null);
        btnAssignMe.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAssignMe.setFocusPainted(false);
        btnAssignMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignMeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(manageEnt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(211, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnViewVolunteersProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAssignMe, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnProcessHelpRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(212, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(manageEnt)
                .addGap(54, 54, 54)
                .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcessHelpRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAssignMe, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnViewVolunteersProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(250, 250, 250))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        populatetransportRequestTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnProcessHelpRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessHelpRequestActionPerformed
        // TODO add your handling code here:
        
        int selectedRow = transportRequestListTable.getSelectedRow();

        if (selectedRow < 0){
          JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        TransportRequest ntwr = (TransportRequest)transportRequestListTable.getValueAt(selectedRow, 0);
        if(ntwr.getReceiver() == null)
        {
            JOptionPane.showMessageDialog(null, "Please assign the request first", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if(ntwr.getStatus().equalsIgnoreCase("Completed"))
        {
         JOptionPane.showMessageDialog(null, "Request has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
         return;     
        }
         if(ntwr.getStatus().equalsIgnoreCase("Processing") ||  ntwr.getStatus().equalsIgnoreCase("Pending"))
        {
         if(ntwr.getReceiver()!=userAccount)
         {
         JOptionPane.showMessageDialog(null, "Request has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
         return;     
         }
        }
        ntwr.setStatus("Processing");
        ntwr.setReceiver(userAccount);
        ProcessTransportWorkRequestJPanel ptwrjp = new ProcessTransportWorkRequestJPanel(userProcessContainer, ntwr, userAccount);
        userProcessContainer.add("ProcessTransportWorkRequestJPanel", ptwrjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_btnProcessHelpRequestActionPerformed

    private void btnViewVolunteersProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewVolunteersProfileActionPerformed
        // TODO add your handling code here:
                int selectedRow = transportRequestListTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        WorkRequest request = (WorkRequest)transportRequestListTable.getValueAt(selectedRow, 0);
        UserAccount ua = (UserAccount)request.getSender();
        
         ViewVolunteerProfile viewVolunteerProfile = new ViewVolunteerProfile(userProcessContainer, ua);
         CardLayout layout = (CardLayout) userProcessContainer.getLayout();
         userProcessContainer.add("ViewVolunteerProfile", viewVolunteerProfile);
         layout.next(userProcessContainer);
    }//GEN-LAST:event_btnViewVolunteersProfileActionPerformed

    private void btnAssignMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignMeActionPerformed
        // TODO add your handling code here:
         int selectedRow = transportRequestListTable.getSelectedRow();

        if (selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row", "warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        WorkRequest request = (WorkRequest)transportRequestListTable.getValueAt(selectedRow, 0);
        if(request.getReceiver()!=null)
        {
         JOptionPane.showMessageDialog(null, "Request has been processed earlier!", "warning", JOptionPane.WARNING_MESSAGE);
         return;     
        }
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populatetransportRequestTable();

    }//GEN-LAST:event_btnAssignMeActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignMe;
    private javax.swing.JButton btnProcessHelpRequest;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnViewVolunteersProfile;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel manageEnt;
    private javax.swing.JTable transportRequestListTable;
    // End of variables declaration//GEN-END:variables
}
